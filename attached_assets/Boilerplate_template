ðŸ“¦ Project StructureÂ¶

chatbot-capstone/
â”œâ”€ backend/                    # FastAPI Backend
â”‚  â”œâ”€ app.py                 # Main API with SSE streaming
â”‚  â”œâ”€ providers/             # AI provider implementations
â”‚  â”‚  â”œâ”€ base.py            # Abstract provider interface
â”‚  â”‚  â”œâ”€ openai_provider.py # OpenAI streaming
â”‚  â”‚  â”œâ”€ anthropic_provider.py # Claude streaming
â”‚  â”‚  â”œâ”€ gemini_provider.py # Gemini streaming
â”‚  â”‚  â””â”€ ollama_provider.py # Local OSS (BONUS)
â”‚  â”œâ”€ models.py              # SQLAlchemy database models
â”‚  â”œâ”€ schemas.py             # Pydantic validation
â”‚  â”œâ”€ db.py                  # Database configuration
â”‚  â”œâ”€ settings.py            # Environment configuration
â”‚  â””â”€ requirements.txt       # Python dependencies
â”œâ”€ backend-express/           # ExpressJS Alternative
â”‚  â”œâ”€ server.js              # Minimal Node.js backend
â”‚  â””â”€ package.json           # Node dependencies
â”œâ”€ frontend/                  # React Frontend
â”‚  â”œâ”€ src/
â”‚  â”‚  â”œâ”€ components/         # Chat UI components
â”‚  â”‚  â”œâ”€ hooks/             # Custom SSE hook
â”‚  â”‚  â”œâ”€ api/               # API client
â”‚  â”‚  â””â”€ styles.css         # Modern CSS
â”‚  â”œâ”€ package.json           # React dependencies
â”‚  â””â”€ vite.config.js         # Build configuration
â”œâ”€ docker-compose.yml         # Postgres setup
â”œâ”€ env.example               # Environment template
â””â”€ README.md                 # Comprehensive setup guide
